///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.10.1.50424 for Atmel AVR       13/Mar/2013  22:40:27 /
// Copyright 1996-2011 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  E:\WORKSPACE\IAR\PowerUnit\vars.c                       /
//    Command line =  E:\WORKSPACE\IAR\PowerUnit\vars.c --cpu=m16 -mt -o      /
//                    E:\WORKSPACE\IAR\PowerUnit\Debug\Obj\ -lb               /
//                    E:\WORKSPACE\IAR\PowerUnit\Debug\List\                  /
//                    --initializers_in_flash --debug                         /
//                    -DENABLE_BIT_DEFINITIONS -e --eeprom_size 512 --clib    /
//                    -Oh                                                     /
//    List file    =  E:\WORKSPACE\IAR\PowerUnit\Debug\List\vars.s90          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME vars

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?F2SL_L04
        EXTERN ?F_MUL_L04
        EXTERN ?UL2F_L04
        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: TINY_I>`
        PUBWEAK `??ButtonEncoder??INTVEC 4`
        PUBWEAK `??EnaOUT??INTVEC 72`
        PUBWEAK `??Encoder??INTVEC 8`
        PUBWEAK `??measure??INTVEC 56`
        PUBWEAK `??time??INTVEC 16`
        PUBLIC ButtonEncoder
        PUBLIC CountADC
        PUBLIC Debounce
        PUBLIC DisplayType
        PUBLIC DoubleClick
        PUBLIC EnaOUT
        PUBLIC Encoder
        PUBLIC IStringLeds
        PUBLIC NULL
        PUBLIC On
        PUBLIC OverLoadLed
        PUBLIC ProtectProgNum
        PUBLIC Secund
        PUBLIC Upwm
        PUBWEAK _A_DDRB
        PUBWEAK _A_GICR
        PUBWEAK _A_GIFR
        PUBWEAK _A_OCR0
        PUBWEAK _A_OCR1A
        PUBWEAK _A_OCR1B
        PUBWEAK _A_PIND
        PUBWEAK _A_PORTC
        PUBWEAK _A_TCCR0
        PUBWEAK _A_TCNT0
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC `adc`
        PUBLIC adc_U
        PUBLIC beep
        PUBLIC beepCounter
        PUBLIC beepFlag
        PUBLIC buttons
        PUBLIC fan
        PUBLIC flagBeepReady
        PUBLIC main
        PUBLIC measure
        PUBLIC melodyFlag
        PUBLIC melodyList
        PUBLIC melodyStep
        PUBLIC pSong
        PUBLIC sound
        PUBLIC tempvar1
        PUBLIC time

ButtonEncoder       SYMBOL "ButtonEncoder"
`??ButtonEncoder??INTVEC 4` SYMBOL "??INTVEC 4", ButtonEncoder
EnaOUT              SYMBOL "EnaOUT"
`??EnaOUT??INTVEC 72` SYMBOL "??INTVEC 72", EnaOUT
Encoder             SYMBOL "Encoder"
`??Encoder??INTVEC 8` SYMBOL "??INTVEC 8", Encoder
measure             SYMBOL "measure"
`??measure??INTVEC 56` SYMBOL "??INTVEC 56", measure
time                SYMBOL "time"
`??time??INTVEC 16` SYMBOL "??INTVEC 16", time

        EXTERN init
        EXTERN display


        ASEGN ABSOLUTE:DATA:NOROOT,05cH
// union <unnamed> volatile __io _A_OCR0
_A_OCR0:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,05bH
// union <unnamed> volatile __io _A_GICR
_A_GICR:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,05aH
// union <unnamed> volatile __io _A_GIFR
_A_GIFR:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,053H
// union <unnamed> volatile __io _A_TCCR0
_A_TCCR0:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,052H
// union <unnamed> volatile __io _A_TCNT0
_A_TCNT0:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,04aH
// union <unnamed> volatile __io _A_OCR1A
_A_OCR1A:
        DS8 2

        ASEGN ABSOLUTE:DATA:NOROOT,048H
// union <unnamed> volatile __io _A_OCR1B
_A_OCR1B:
        DS8 2

        ASEGN ABSOLUTE:DATA:NOROOT,037H
// union <unnamed> volatile __io _A_DDRB
_A_DDRB:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,035H
// union <unnamed> volatile __io _A_PORTC
_A_PORTC:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,030H
// union <unnamed> volatile __io _A_PIND
_A_PIND:
        DS8 1

        RSEG NEAR_F:CODE:NOROOT(0)
NULL:
        DC8 0, 0

        RSEG NEAR_F:CODE:NOROOT(0)
DoubleClick:
        DC16 30, 100, 22, 100, 18, 100, 0, 800, 10, 500, 0, 0

        RSEG NEAR_F:CODE:NOROOT(0)
On:
        DC16 30, 100, 22, 100, 18, 100, 0, 0

        RSEG NEAR_F:CODE:NOROOT(0)
Secund:
        DC16 20, 5, 10, 5, 20, 5, 10, 5, 20, 5, 10, 5, 20, 5, 10, 5, 20, 5, 10
        DC16 5, 20, 5, 10, 5, 20, 5, 10, 5, 20, 5, 10, 5, 20, 5, 10, 5, 20, 5
        DC16 10, 5, 20, 5, 10, 5, 20, 5, 10, 5, 0, 0

        RSEG NEAR_F:CODE:NOROOT(0)
melodyList:
        DC16 NULL, DoubleClick, On, Secund

        RSEG TINY_I:DATA:NOROOT(0)
        REQUIRE `?<Segment init: TINY_I>`
Debounce:
        DS8 8
        REQUIRE `?<Initializer for Debounce>`
Upwm:
        DS8 2
        REQUIRE `?<Initializer for Upwm>`
beepCounter:
        DS8 2
        REQUIRE `?<Initializer for beepCounter>`
pSong:
        DS8 2
        REQUIRE `?<Initializer for pSong>`
beepFlag:
        DS8 1
        REQUIRE `?<Initializer for beepFlag>`
IStringLeds:
        DS8 1
        REQUIRE `?<Initializer for IStringLeds>`
OverLoadLed:
        DS8 1
        REQUIRE `?<Initializer for OverLoadLed>`
DisplayType:
        DS8 1
        REQUIRE `?<Initializer for DisplayType>`
ProtectProgNum:
        DS8 1
        REQUIRE `?<Initializer for ProtectProgNum>`
melodyFlag:
        DS8 1
        REQUIRE `?<Initializer for melodyFlag>`
melodyStep:
        DS8 1
        REQUIRE `?<Initializer for melodyStep>`
flagBeepReady:
        DS8 1
        REQUIRE `?<Initializer for flagBeepReady>`
tempvar1:
        DS8 1
        REQUIRE `?<Initializer for tempvar1>`

        RSEG TINY_I:DATA:NOROOT(0)
        REQUIRE `?<Segment init: TINY_I>`
CountADC:
        DS8 1
        REQUIRE `?<Initializer for CountADC>`

        RSEG CODE:CODE:NOROOT(1)
main:
        CALL    init
        SEI
??main_0:
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+8
        LDD     R17, Z+9
        OUT     0x29, R17
        OUT     0x28, R16
        LDD     R16, Z+8
        LDD     R17, Z+9
        OUT     0x2B, R17
        OUT     0x2A, R16
        LDS     R16, (Debounce + 17)
        TST     R16
        BRNE    ??main_1
        LDS     R16, (Debounce + 16)
        LDI     R17, 0
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 18)
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 15)
        ST      -Y, R17
        ST      -Y, R16
        ST      -Y, R17
        ST      -Y, R17
        LDI     R20, 30
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        LDS     R16, (Debounce + 20)
        LDI     R18, 0
        LDI     R19, 0
        CALL    display
??main_1:
        LDS     R16, (Debounce + 17)
        CPI     R16, 1
        BRNE    ??main_2
        LDS     R16, (Debounce + 16)
        LDI     R17, 0
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 18)
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 15)
        ST      -Y, R17
        ST      -Y, R16
        LDI     R16, 1
        ST      -Y, R17
        ST      -Y, R16
        LDI     R20, 0
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        LDI     R16, 46
        LDI     R17, 22
        LDI     R18, 0
        LDI     R19, 0
        CALL    display
??main_2:
        LDS     R16, (Debounce + 17)
        CPI     R16, 2
        BRNE    ??main_3
        LDS     R16, (Debounce + 16)
        LDI     R17, 0
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 18)
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 15)
        ST      -Y, R17
        ST      -Y, R16
        LDI     R16, 2
        ST      -Y, R17
        ST      -Y, R16
        LDI     R20, 0
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        LDI     R16, 52
        LDI     R17, 35
        LDI     R18, 0
        LDI     R19, 0
        CALL    display
??main_3:
        LDS     R16, (Debounce + 17)
        CPI     R16, 3
        BRNE    ??main_4
        LDS     R16, (Debounce + 16)
        LDI     R17, 0
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 18)
        ST      -Y, R17
        ST      -Y, R16
        LDS     R16, (Debounce + 15)
        ST      -Y, R17
        ST      -Y, R16
        LDI     R16, 3
        ST      -Y, R17
        ST      -Y, R16
        LDI     R20, 0
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        LDI     R16, 0
        LDI     R18, 0
        LDI     R19, 0
        CALL    display
??main_4:
        RCALL   buttons
        LDI     R16, 0
        STS     (Debounce + 16), R16
        RJMP    ??main_0
        REQUIRE _A_OCR1B
        REQUIRE _A_OCR1A

        RSEG CODE:CODE:NOROOT(1)
fan:
        RET

        RSEG CODE:CODE:NOROOT(1)
`adc`:
        RET

        RSEG CODE:CODE:NOROOT(1)
adc_U:
        RET

        RSEG CODE:CODE:NOROOT(1)
buttons:
        ST      -Y, R25
        ST      -Y, R24
        LDS     R16, Debounce
        TST     R16
        BREQ    ??buttons_0
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+1
        DEC     R16
        STD     Z+1, R16
        LDS     R16, (Debounce + 1)
        TST     R16
        BRNE    ??buttons_0
        STS     Debounce, R31
??buttons_0:
        LDS     R16, (Debounce + 4)
        TST     R16
        BREQ    ??buttons_1
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+5
        DEC     R16
        STD     Z+5, R16
        LDS     R16, (Debounce + 5)
        TST     R16
        BRNE    ??buttons_1
        STS     (Debounce + 4), R31
        IN      R16, 0x3A
        ANDI    R16, 0xBF
        OUT     0x3A, R16
        IN      R16, 0x3B
        ORI     R16, 0x40
        OUT     0x3B, R16
??buttons_1:
        LDS     R16, (Debounce + 6)
        TST     R16
        BREQ    ??buttons_2
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+7
        DEC     R16
        STD     Z+7, R16
        LDS     R16, (Debounce + 7)
        TST     R16
        BRNE    ??buttons_2
        STS     (Debounce + 6), R31
        IN      R16, 0x3A
        ORI     R16, 0x20
        OUT     0x3A, R16
        IN      R16, 0x3B
        ORI     R16, 0x20
        OUT     0x3B, R16
??buttons_2:
        LDS     R16, Debounce
        TST     R16
        BRNE    ??buttons_3
        SBIC    0x10, 0x01
        RJMP    ??buttons_3
        LDS     R16, (Debounce + 17)
        CPI     R16, 2
        BREQ    ??buttons_4
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+17
        INC     R16
        STD     Z+17, R16
        RJMP    ??buttons_5
??buttons_4:
        LDI     R16, 0
        STS     (Debounce + 17), R16
??buttons_5:
        LDI     R16, 1
        STS     Debounce, R16
        LDI     R16, 16
        STS     (Debounce + 1), R16
        LDI     R16, 2
        RCALL   sound
??buttons_3:
        LDS     R16, (Debounce + 14)
        TST     R16
        BRNE    ??buttons_6
        LDS     R16, (Debounce + 19)
        TST     R16
        BRNE    ??buttons_6
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R24, Z+12
        LDD     R25, Z+13
        LDS     R16, (Debounce + 20)
        LDI     R17, 4
        MUL     R16, R17
        ADD     R24, R0
        ADC     R25, R1
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R16, Z+
        LPM     R17, Z
        OR      R16, R17
        BRNE    ??buttons_7
        LDI     R16, 0
        STS     (Debounce + 21), R16
        LDI     R18, 0
        LDI     R19, 0
        RCALL   beep
??buttons_7:
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R16, Z+
        LPM     R17, Z
        OR      R16, R17
        BREQ    ??buttons_6
        LDI     R16, 0
        STS     (Debounce + 14), R16
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R18, Z+
        LPM     R19, Z
        MOVW    R31:R30, R25:R24
        LPM     R16, Z+
        RCALL   beep
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+20
        INC     R16
        STD     Z+20, R16
??buttons_6:
        LDS     R16, (Debounce + 14)
        CPI     R16, 3
        BRNE    ??buttons_8
        LDS     R16, (Debounce + 19)
        TST     R16
        BRNE    ??buttons_8
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R24, Z+12
        LDD     R25, Z+13
        LDS     R16, (Debounce + 20)
        LDI     R17, 4
        MUL     R16, R17
        ADD     R24, R0
        ADC     R25, R1
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R16, Z+
        LPM     R17, Z
        OR      R16, R17
        BRNE    ??buttons_9
        LDI     R16, 0
        STS     (Debounce + 21), R16
        LDI     R18, 0
        LDI     R19, 0
        RCALL   beep
??buttons_9:
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R16, Z+
        LPM     R17, Z
        OR      R16, R17
        BREQ    ??buttons_8
        LDI     R16, 0
        STS     (Debounce + 14), R16
        MOVW    R31:R30, R25:R24
        ADIW    R31:R30, 2
        LPM     R18, Z+
        LPM     R19, Z
        MOVW    R31:R30, R25:R24
        LPM     R16, Z+
        RCALL   beep
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+20
        INC     R16
        STD     Z+20, R16
??buttons_8:
        LD      R24, Y+
        LD      R25, Y+
        RET
        REQUIRE _A_GIFR
        REQUIRE _A_GICR
        REQUIRE _A_PIND

        RSEG CODE:CODE:NOROOT(1)
sound:
        LDS     R17, (Debounce + 19)
        TST     R17
        BRNE    ??sound_0
        LDI     R17, 2
        MUL     R16, R17
        MOVW    R31:R30, R1:R0
        SUBI    R30, LOW((-(melodyList) & 0xFFFF))
        SBCI    R31, (-(melodyList) & 0xFFFF) >> 8
        LPM     R16, Z+
        LPM     R17, Z
        STS     (Debounce + 12), R16
        STS     (Debounce + 13), R17
        LDI     R16, 0
        STS     (Debounce + 20), R16
        LDI     R16, 1
        STS     (Debounce + 19), R16
??sound_0:
        RET

        RSEG CODE:CODE:NOROOT(1)
beep:
        MOV     R20, R16
        MOVW    R17:R16, R19:R18
        OR      R18, R19
        BRNE    ??beep_0
        LDI     R16, 40
        OUT     0x33, R16
        LDI     R16, 0
        STS     (Debounce + 14), R16
        LDI     R30, Debounce
        LDI     R31, 0
        STD     Z+10, R16
        STD     Z+11, R16
        CBI     0x17, 0x03
        RET
??beep_0:
        LDS     R18, (Debounce + 14)
        TST     R18
        BRNE    ??beep_1
        SBI     0x17, 0x03
        LDI     R18, 0
        OUT     0x32, R18
        TST     R20
        BRNE    ??beep_2
        LDI     R18, 40
        OUT     0x33, R18
        CBI     0x17, 0x03
        RJMP    ??beep_3
??beep_2:
        OUT     0x3C, R20
        LDI     R18, 28
        OUT     0x33, R18
??beep_3:
        LDI     R18, 0
        LDI     R19, 0
        CALL    ?UL2F_L04
        LDI     R20, 246
        LDI     R21, 40
        LDI     R22, 156
        LDI     R23, 62
        CALL    ?F_MUL_L04
        CALL    ?F2SL_L04
        LDI     R30, Debounce
        LDI     R31, 0
        STD     Z+10, R16
        STD     Z+11, R17
        LDI     R16, 1
        STS     (Debounce + 14), R16
??beep_1:
        RET
        REQUIRE _A_TCCR0
        REQUIRE _A_DDRB
        REQUIRE _A_TCNT0
        REQUIRE _A_OCR0

        RSEG CODE:CODE:NOROOT(1)
time:
        ST      -Y, R31
        ST      -Y, R30
        ST      -Y, R18
        ST      -Y, R17
        ST      -Y, R16
        IN      R18, 0x3F
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+14
        CPI     R16, 1
        BRNE    ??time_0
        LDD     R16, Z+10
        LDD     R17, Z+11
        SUBI    R16, 1
        SBCI    R17, 0
        STD     Z+10, R16
        STD     Z+11, R17
        LDD     R16, Z+10
        LDD     R17, Z+11
        OR      R16, R17
        BRNE    ??time_0
        LDI     R16, 3
        STD     Z+14, R16
??time_0:
        LDD     R16, Z+22
        DEC     R16
        STD     Z+22, R16
        TST     R16
        BRNE    ??time_1
        LDI     R16, 46
        STD     Z+22, R16
        LDD     R16, Z+15
        INC     R16
        STD     Z+15, R16
        CPI     R16, 7
        BRNE    ??time_1
        STD     Z+15, R31
??time_1:
        REQUIRE ?Subroutine0
        ;               // Fall through to label ?Subroutine0

        RSEG CODE:CODE:NOROOT(1)
?Subroutine0:
        OUT     0x3F, R18
        LD      R16, Y+
        LD      R17, Y+
        LD      R18, Y+
        LD      R30, Y+
        LD      R31, Y+
        RETI

        RSEG CODE:CODE:NOROOT(1)
measure:
        ST      -Y, R18
        ST      -Y, R17
        ST      -Y, R16
        IN      R18, 0x3F
        LDI     R17, 0
        SBIC    0x15, 0x02
        LDI     R17, 1
??measure_0:
        LDI     R16, 1
        EOR     R17, R16
        BST     R17, 0
        IN      R17, 0x15
        BLD     R17, 2
        OUT     0x15, R17
        RJMP    ??Subroutine2_0
        REQUIRE _A_PORTC

        RSEG CODE:CODE:NOROOT(1)
Encoder:
        ST      -Y, R31
        ST      -Y, R30
        ST      -Y, R18
        ST      -Y, R17
        ST      -Y, R16
        IN      R18, 0x3F
        LDI     R16, 159
        LDI     R17, 15
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        SBIC    0x10, 0x00
        RJMP    ??Encoder_0
        LDS     R16, (Debounce + 8)
        LDS     R17, (Debounce + 9)
        CPI     R16, 252
        SBCI    R17, 3
        BRCC    ??Encoder_1
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+8
        LDD     R17, Z+9
        SUBI    R16, 252
        SBCI    R17, 255
        RJMP    ??Encoder_2
??Encoder_0:
        LDS     R30, (Debounce + 8)
        LDS     R31, (Debounce + 9)
        SBIW    R31:R30, 4
        BRCS    ??Encoder_1
        LDI     R30, Debounce
        LDI     R31, 0
        LDD     R16, Z+8
        LDD     R17, Z+9
        SUBI    R16, 4
        SBCI    R17, 0
??Encoder_2:
        STD     Z+8, R16
        STD     Z+9, R17
??Encoder_1:
        IN      R16, 0x3A
        ANDI    R16, 0x7F
        OUT     0x3A, R16
        RJMP    ?Subroutine0
        REQUIRE _A_PIND
        REQUIRE _A_GIFR

        RSEG CODE:CODE:NOROOT(1)
ButtonEncoder:
        ST      -Y, R18
        ST      -Y, R17
        ST      -Y, R16
        IN      R18, 0x3F
        LDI     R16, 159
        LDI     R17, 15
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDS     R16, (Debounce + 18)
        CPI     R16, 2
        BRNE    ??ButtonEncoder_0
        LDI     R16, 0
        RJMP    ??ButtonEncoder_1
??ButtonEncoder_0:
        INC     R16
??ButtonEncoder_1:
        STS     (Debounce + 18), R16
        LDI     R16, 1
        STS     (Debounce + 4), R16
        LDI     R16, 10
        STS     (Debounce + 5), R16
        IN      R16, 0x3B
        ANDI    R16, 0xBF
        REQUIRE ?Subroutine1
        REQUIRE _A_GICR
        ;               // Fall through to label ?Subroutine1

        RSEG CODE:CODE:NOROOT(1)
?Subroutine1:
        OUT     0x3B, R16
        REQUIRE ??Subroutine2_0
        ;               // Fall through to label ??Subroutine2_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine2_0:
        OUT     0x3F, R18
        LD      R16, Y+
        LD      R17, Y+
        LD      R18, Y+
        RETI

        RSEG CODE:CODE:NOROOT(1)
EnaOUT:
        ST      -Y, R18
        ST      -Y, R17
        ST      -Y, R16
        IN      R18, 0x3F
        LDI     R16, 159
        LDI     R17, 15
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDI     R17, 0
        SBIC    0x15, 0x07
        LDI     R17, 1
??EnaOUT_0:
        LDI     R16, 1
        EOR     R17, R16
        BST     R17, 0
        IN      R17, 0x15
        BLD     R17, 7
        OUT     0x15, R17
        IN      R16, 0x15
        LDI     R16, 1
        STS     (Debounce + 6), R16
        LDI     R16, 16
        STS     (Debounce + 7), R16
        IN      R16, 0x3B
        ANDI    R16, 0xDF
        RJMP    ?Subroutine1
        REQUIRE _A_PORTC
        REQUIRE _A_GICR

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        COMMON INTVEC:CODE:ROOT(1)
        ORG 4
`??ButtonEncoder??INTVEC 4`:
        JMP     ButtonEncoder

        COMMON INTVEC:CODE:ROOT(1)
        ORG 8
`??Encoder??INTVEC 8`:
        JMP     Encoder

        COMMON INTVEC:CODE:ROOT(1)
        ORG 16
`??time??INTVEC 16`:
        JMP     time

        COMMON INTVEC:CODE:ROOT(1)
        ORG 56
`??measure??INTVEC 56`:
        JMP     measure

        COMMON INTVEC:CODE:ROOT(1)
        ORG 72
`??EnaOUT??INTVEC 72`:
        JMP     EnaOUT

        RSEG TINY_ID:CODE:NOROOT(0)
`?<Initializer for Debounce>`:
        DC8 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for Upwm>`:
        DC16 500
`?<Initializer for beepCounter>`:
        DC16 0
`?<Initializer for pSong>`:
        DC16 DoubleClick
`?<Initializer for beepFlag>`:
        DC8 0
`?<Initializer for IStringLeds>`:
        DC8 2
`?<Initializer for OverLoadLed>`:
        DC8 1
`?<Initializer for DisplayType>`:
        DC8 0
`?<Initializer for ProtectProgNum>`:
        DC8 2
`?<Initializer for melodyFlag>`:
        DC8 0
`?<Initializer for melodyStep>`:
        DC8 0
`?<Initializer for flagBeepReady>`:
        DC8 0
`?<Initializer for tempvar1>`:
        DC8 0

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: TINY_I>`:
        DC16    SFE(TINY_I) - SFB(TINY_I)
        DC16    SFB(TINY_I)
        DC16    SFB(TINY_ID)
        REQUIRE ?need_segment_init

        RSEG TINY_ID:CODE:NOROOT(0)
`?<Initializer for CountADC>`:
        DC8 8

        END
// 
//    12 bytes in segment ABSOLUTE
// 1 142 bytes in segment CODE
//     6 bytes in segment INITTAB
//    20 bytes in segment INTVEC
//   150 bytes in segment NEAR_F
//    24 bytes in segment TINY_I
//    24 bytes in segment TINY_ID
// 
// 1 316 bytes of CODE memory (+ 26 bytes shared)
//    24 bytes of DATA memory (+ 12 bytes shared)
//
//Errors: none
//Warnings: 1
